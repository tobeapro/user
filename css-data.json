{
	"data":
	[
		{
		"title":"CSS3 filter的十种特效",
		"isOriginal":true,
		"author":"self",
		"authorLink":"#",
		"articleLink":"#",
		"contentData":
			[
				{"type":"js","content":"filter: none| blur() | brightness() | contrast() | drop-shadow() | grayscale() | hue-rotate() | invert() | opacity() | saturate() | sepia() "},
				{"type":"text","content":"滤镜：（1）grayscale灰度，默认为100%；（2）sepia褐色度，默认为100%；（3）saturate饱和度，默认为100%；（4）hue-rotate色相旋转，默认为0deg；（5）invert反色，默认为100%；（6）opacity透明度，默认为100%；（7）brightness亮度，默认为100%；（8）contrast对比度，默认为100%；（9）blur模糊，默认为0；（10）drop-shadow阴影"},
				{"type":"img","content":"img/filter.png","explain":"filter实例"}
			]
		},
		{
		"title":"Vue开发中的一些坑",
		"isOriginal":true,
		"author":"self",
		"authorLink":"#",
		"articleLink":"#",
		"contentData":
			[
				{"type":"text","content":" 引入第三方的框架或者一些封装的内置组件，绑定事件时需要加.native修饰 "},
				{"type":"text","content":"如 '<'el-input @mouseover=fun()></el-input>要改为'<'el-input @mouseover.native=fun()></el-input>"}
			]
		},
		{
		"title":"toFixed取小数的重新封装",
		"isOriginal":true,
		"author":"self",
		"authorLink":"#",
		"articleLink":"#",
		"contentData":
			[
				{"type":"img","content":"img/toFixed.png","explain":"toFixed重写"}
			]
		},
		{
		"title":"vue-cli中配置mongodb",
		"isOriginal":true,
		"author":"self",
		"authorLink":"#",
		"articleLink":"#",
		"contentData":
			[
				{"type":"text","content":"现在根目录下建立servers文件夹"},
				{"type":"img","content":"img/db1.png","explain":"文件位置"},
				{"type":"text","content":"在servers中新建scheame.js和index.js，安装mongoose模块，Mongoose是在node.js异步环境下对mongodb进行便捷操作的对象模型工具,简单来说就是使用mongoose来操作Mongodb。在schema中引入mongoose，首先创建schema实例，实例中对象包含该数据对应的字段同时定义数据类型；再创建model，每个model对应一个schema。"},
				{"type":"img","content":"img/db2.png","explain":"schema.js"},
				{"type":"text","content":"首先在mongodb安装目录下双击打开mongodb.exe,启动成功在27017接口能看到相应的提示信息"},
				{"type":"img","content":"img/db3.png","explain":"mongodb.exe"},
				{"type":"img","content":"img/db4.png","explain":"启动成功"},
				{"type":"text","content":"使用mongoose.connect方法连接本地数据库，默认端口为271017,图中的player为自定义的数据库名字（第一次连接会默认创建）"},
				{"type":"text","content":"使用mongoose监听mongodb连接状态，同时将model的方法导出"},
				{"type":"text","content":"在servers下的index引入schema，向外暴露命名的接口方法，数据会和数据库的集合相对应，本例子中player数据库中对应有user和music两个集合"},
				{"type":"img","content":"img/db5.png","explain":"index.js"},
				{"type":"text","content":"在build文件夹下打开dev-server.js，配置开发环境中的node"},
				{"type":"img","content":"img/db6.png","explain":"文件位置"},
				{"type":"img","content":"img/db7.png","explain":"dev-server.js"}
			]
		}
	]
}
